module.exports=[406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},1965,(e,t,r)=>{t.exports=e.x("@supabase/auth-helpers-nextjs",()=>require("@supabase/auth-helpers-nextjs"))},2359,e=>{"use strict";e.s(["config",()=>d,"default",()=>p,"handler",()=>h],2359);var t=e.i(5196),r=e.i(9313),a=e.i(3822),i=e.i(1161);e.s(["default",()=>s],5574);var n=e.i(1965);let s=async(e,t)=>{let{code:r,redirect:a}=e.query;if("string"==typeof r){let a=(0,n.createPagesServerClient)({req:e,res:t}),{error:i}=await a.auth.exchangeCodeForSession(r);if(i)return t.redirect(307,`/login?error=${encodeURIComponent(i.message)}`)}let i=(Array.isArray(a)?a[0]:a)??("string"==typeof e.query.redirect_to?e.query.redirect_to:void 0),s="string"==typeof i&&i.startsWith("/")?i:"/cv";t.redirect(307,s)};var l=e.i(5574),o=e.i(9617),u=e.i(3732);let p=(0,i.hoist)(l,"default"),d=(0,i.hoist)(l,"config"),c=new a.PagesAPIRouteModule({definition:{kind:r.RouteKind.PAGES_API,page:"/api/auth/callback",pathname:"/api/auth/callback",bundlePath:"",filename:""},userland:l,distDir:".next",relativeProjectDir:""});async function h(e,r,a){let i="/api/auth/callback";i=i.replace(/\/index$/,"")||"/";let n=await c.prepare(e,r,{srcPage:i});if(!n){r.statusCode=400,r.end("Bad Request"),null==a.waitUntil||a.waitUntil.call(a,Promise.resolve());return}let{query:s,params:l,prerenderManifest:p,routerServerContext:d}=n;try{let t=e.method||"GET",a=(0,o.getTracer)(),i=a.getActiveScopeSpan(),n=c.instrumentationOnRequestError.bind(c),h=async i=>c.render(e,r,{query:{...s,...l},params:l,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:p.preview,propagateError:!1,dev:c.isDev,page:"/api/auth/callback",internalRevalidate:null==d?void 0:d.revalidate,onError:(...t)=>n(e,...t)}).finally(()=>{if(!i)return;i.setAttributes({"http.status_code":r.statusCode,"next.rsc":!1});let n=a.getRootSpanAttributes();if(!n)return;if(n.get("next.span_type")!==u.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${n.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let s=n.get("next.route");if(s){let e=`${t} ${s}`;i.setAttributes({"next.route":s,"http.route":s,"next.span_name":e}),i.updateName(e)}else i.updateName(`${t} ${e.url}`)});i?await h(i):await a.withPropagatedContext(e.headers,()=>a.trace(u.BaseServerSpan.handleRequest,{spanName:`${t} ${e.url}`,kind:o.SpanKind.SERVER,attributes:{"http.method":t,"http.target":e.url}},h))}catch(e){if(c.isDev)throw e;(0,t.sendError)(r,500,"Internal Server Error")}finally{null==a.waitUntil||a.waitUntil.call(a,Promise.resolve())}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__c9b88965._.js.map