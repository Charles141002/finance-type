{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/charlespelong/Desktop/finance-type/my-cv-app/pages/api/cv/save.ts"],"sourcesContent":["import type { NextApiHandler } from 'next'\nimport { createPagesServerClient } from '@supabase/auth-helpers-nextjs'\nimport type { Block } from '../../../utils/types'\n\ninterface SavePayload {\n  id?: string\n  title?: string\n  blocks?: Block[]\n  fontScale?: number\n}\n\nconst handler: NextApiHandler = async (req, res) => {\n  if (req.method !== 'POST') {\n    res.setHeader('Allow', ['POST'])\n    return res.status(405).json({ error: 'Méthode non autorisée' })\n  }\n\n  const supabase = createPagesServerClient({ req, res })\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  if (!session?.user) {\n    return res.status(401).json({ error: 'Vous devez être connecté pour sauvegarder le CV.' })\n  }\n\n  let payload: SavePayload\n\n  try {\n    payload = req.body as SavePayload\n  } catch {\n    return res.status(400).json({ error: 'Payload invalide.' })\n  }\n\n  if (!Array.isArray(payload.blocks)) {\n    return res.status(400).json({ error: 'La liste des blocs est manquante ou invalide.' })\n  }\n\n  const title = typeof payload.title === 'string' && payload.title.trim().length > 0 ? payload.title.trim() : 'Mon CV'\n  const fontScale = typeof payload.fontScale === 'number' ? payload.fontScale : 1\n\n  const upsertValues: Record<string, unknown> = {\n    user_id: session.user.id,\n    title,\n    blocks: payload.blocks,\n    font_scale: fontScale,\n  }\n\n  if (payload.id) {\n    upsertValues.id = payload.id\n  }\n\n  const { data, error } = await supabase\n    .from('user_cvs')\n    .upsert(upsertValues, { onConflict: 'id', returning: 'representation' })\n\n  if (error) {\n    return res.status(500).json({ error: error.message })\n  }\n\n  return res.status(200).json({ success: true, cv: data?.[0] })\n}\n\nexport default handler\n"],"names":[],"mappings":";;;;AACA;;AAUA,MAAM,UAA0B,OAAO,KAAK;IAC1C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,IAAI,SAAS,CAAC,SAAS;YAAC;SAAO;QAC/B,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAwB;IAC/D;IAEA,MAAM,WAAW,IAAA,kMAAuB,EAAC;QAAE;QAAK;IAAI;IACpD,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAElC,IAAI,CAAC,SAAS,MAAM;QAClB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAmD;IAC1F;IAEA,IAAI;IAEJ,IAAI;QACF,UAAU,IAAI,IAAI;IACpB,EAAE,OAAM;QACN,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAoB;IAC3D;IAEA,IAAI,CAAC,MAAM,OAAO,CAAC,QAAQ,MAAM,GAAG;QAClC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAgD;IACvF;IAEA,MAAM,QAAQ,OAAO,QAAQ,KAAK,KAAK,YAAY,QAAQ,KAAK,CAAC,IAAI,GAAG,MAAM,GAAG,IAAI,QAAQ,KAAK,CAAC,IAAI,KAAK;IAC5G,MAAM,YAAY,OAAO,QAAQ,SAAS,KAAK,WAAW,QAAQ,SAAS,GAAG;IAE9E,MAAM,eAAwC;QAC5C,SAAS,QAAQ,IAAI,CAAC,EAAE;QACxB;QACA,QAAQ,QAAQ,MAAM;QACtB,YAAY;IACd;IAEA,IAAI,QAAQ,EAAE,EAAE;QACd,aAAa,EAAE,GAAG,QAAQ,EAAE;IAC9B;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,YACL,MAAM,CAAC,cAAc;QAAE,YAAY;QAAM,WAAW;IAAiB;IAExE,IAAI,OAAO;QACT,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC;IACrD;IAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAAE,SAAS;QAAM,IAAI,MAAM,CAAC,EAAE;IAAC;AAC7D;uCAEe","debugId":null}}]
}